//TIME COMPLEXITY = 0(M+N)
import java.util.*;
class Main{
    // KMPSearch
    public static void KMPSearch(String pat,String text){
        int M = pat.length();
        int N = text.length();
        int table[] = new int[M];
        int i=0,j=0;
        LPSTable(pat,M,table);
        
        while(i<N){
            if(pat.charAt(j)==text.charAt(i)){
                j++;
                i++;
            }
            if(j==M){
                System.out.println("Pattern found at index "+(i-j));
                j = table[j-1];
            }
            else if( i<N && pat.charAt(j) != text.charAt(i) ){
                if( j!=0 )
                    j = table[j-1];
                    
                else
                    i = i+1;
            }
        }
        
    }
    //Compute LPS table
    public static void LPSTable(String pat,int M,int table[]){
        int j=0,i=1;
        table[0] = 0;
        
        while(i<M){
            
            if(pat.charAt(i) == pat.charAt(j)){
                table[i] = j;
                j++;
                i++;
            }
            else{
                    if(j!=0){
                        j = table[j-1];
                    }
                    else{
                        table[i] = j;
                        i++;
                    }
            }
        }
    }
    
    public static void main(String [] args){
        String text = "PRITHIKAPRITHIKAPRITHIKAPRITHIKAPRITHIKAPRITHIKA";
        String pat = "PRI";
        Main m = new Main();
        m.KMPSearch(pat,text);
    }
}
